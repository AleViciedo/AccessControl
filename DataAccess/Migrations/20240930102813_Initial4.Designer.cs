// <auto-generated />
using System;
using AccessControl.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccessControl.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240930102813_Initial4")]
    partial class Initial4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.27");

            modelBuilder.Entity("AccessControl.Domain.Entities.ConfigurationData.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CI")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Formation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("AccessControl.Domain.Entities.HistoricalData.AccessEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Entry")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Exit")
                        .HasColumnType("TEXT");

                    b.Property<bool>("InBuilding")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("AccessEntries");
                });

            modelBuilder.Entity("AccessControl.Domain.ValueObjects.Process", b =>
                {
                    b.Property<Guid>("ProcessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("TEXT");

                    b.HasKey("ProcessId");

                    b.HasIndex("PersonId");

                    b.ToTable("Processes", (string)null);
                });

            modelBuilder.Entity("AccessControl.Domain.Entities.ConfigurationData.Operator", b =>
                {
                    b.HasBaseType("AccessControl.Domain.Entities.ConfigurationData.Person");

                    b.Property<Guid?>("ProcessId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SupervisorId")
                        .HasColumnType("TEXT");

                    b.HasIndex("ProcessId");

                    b.HasIndex("SupervisorId");

                    b.HasDiscriminator().HasValue("Operator");
                });

            modelBuilder.Entity("AccessControl.Domain.Entities.ConfigurationData.Supervisor", b =>
                {
                    b.HasBaseType("AccessControl.Domain.Entities.ConfigurationData.Person");

                    b.Property<Guid?>("ProcessId")
                        .HasColumnType("TEXT")
                        .HasColumnName("Supervisor_ProcessId");

                    b.HasIndex("ProcessId");

                    b.HasDiscriminator().HasValue("Supervisor");
                });

            modelBuilder.Entity("AccessControl.Domain.Entities.HistoricalData.AccessEntry", b =>
                {
                    b.HasOne("AccessControl.Domain.Entities.ConfigurationData.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("AccessControl.Domain.ValueObjects.Process", b =>
                {
                    b.HasOne("AccessControl.Domain.Entities.ConfigurationData.Person", null)
                        .WithMany("Processes")
                        .HasForeignKey("PersonId");

                    b.OwnsMany("AccessControl.Domain.ValueObjects.Product", "Products", b1 =>
                        {
                            b1.Property<Guid>("ProcessId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Product Name");

                            b1.HasKey("ProcessId", "Id");

                            b1.ToTable("Process Products", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ProcessId");
                        });

                    b.Navigation("Products");
                });

            modelBuilder.Entity("AccessControl.Domain.Entities.ConfigurationData.Operator", b =>
                {
                    b.HasOne("AccessControl.Domain.ValueObjects.Process", null)
                        .WithMany("Operators")
                        .HasForeignKey("ProcessId");

                    b.HasOne("AccessControl.Domain.Entities.ConfigurationData.Supervisor", "Supervisor")
                        .WithMany("Operators")
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("AccessControl.Domain.Entities.ConfigurationData.Supervisor", b =>
                {
                    b.HasOne("AccessControl.Domain.ValueObjects.Process", null)
                        .WithMany("Supervisors")
                        .HasForeignKey("ProcessId");
                });

            modelBuilder.Entity("AccessControl.Domain.Entities.ConfigurationData.Person", b =>
                {
                    b.Navigation("Processes");
                });

            modelBuilder.Entity("AccessControl.Domain.ValueObjects.Process", b =>
                {
                    b.Navigation("Operators");

                    b.Navigation("Supervisors");
                });

            modelBuilder.Entity("AccessControl.Domain.Entities.ConfigurationData.Supervisor", b =>
                {
                    b.Navigation("Operators");
                });
#pragma warning restore 612, 618
        }
    }
}
